API请求与身份认证
1、web API协议（服务器可以与客户端使用不同的语言）
web API一般采用HTTP作为底层协议，HTTP请求机制如下：
（1）客户端向服务器发送一个请求
（2）服务器给客户端一个响应，告诉客户端是否可以完成它请求的工作

2、HTTP请求包含的内容
为了构造有效的请求，客户端需要包含四个部分：
（1）URL（API调用地址）
（2）Method（请求方式）
（3）Headers（请求头）
（4）Body（请求主体）

3、API请求方式
请求方式告诉服务器客户端希望它采取什么动作。常见的请求方式有四种：
（1）GET：请求获取一个资源（用的多）
（2）POST：请求服务器创建一个新的资源（用的多）
（3）PUT：请求服务器编辑或更新一个已存在的资源
（4）DELETE：请求服务器删除一个资源

4、请求头（Headers）
提供了请求的元信息，是一个简单的项目列表，其中有客户端发送请求的时间和请求主体大小，身份认证等信息。

5、请求体（Body）
包含了客户端希望发送给服务器的数据

6、状态码-成功状态
当成功调用API后、除了返回数据外、还会包含一个状态码，处理成功返回2xx：
200 OK-[GET]——服务器成功返回用户请求的数据
201 CREATED-[POST/PUT/PATCH]——用户新建或修改数据成功
202 Accepted-[*]——表示一个请求已经进入后台排队（异步任务）
204 NO CONTENT-[DELETE]——用户删除数据成功

7、状态码-服务端错误码
API未成功调用，则返回错误码。服务端错误码是5xx，表示服务不可用（此时一般建议重试或联系API服务提供商）
错误代码 | HTTP状态码 | 语义 | 解决方案
Internal Error | 500 | API内部网关错误 | 建议重试
Failed To Invoke Backend Service | 500 | 底层服务错误 | API提供者底层服务错误。建议重试，如不行则联系API服务提供商解决。
Service Unavaliable | 503 | 服务不可用 | 建议稍后重试
Async Service | 504 | 后端服务超时 | 建议稍后重试

8、状态码-客户端错误码
客户端错误码为4xx，表示业务报错。此时一般为参数错误、签名错误、请求方式有误或被流控限制等业务类错误。
注：有些API自定义了错误码，具体查看该API文档中的描述。

9、返回数据格式（JSON（用的更多）或XML格式）
目前最新的API大多使用JSON数据格式。JSON（JavaScript object notation）是一种轻量级的数据交换格式
采用完全独立于语言的文本格式，易于人阅读和编写，同时也易于及其解析和生成，是一种理想的数据交换语言。

10、JSON数据格式表示方法
（1）表示对象；JSON最常用的格式是对象的键值对
{“name”：“黑龙江”，“city”：“哈尔滨”}
{“P”：“value”}
（2）表示数组（多个对象形成一个数组）；和普通的JS数组一样、JSON表示数组的方式是使用方括号[]
{
	“name”：“中国”，
	“province”：[{
		"name":"黑龙江"，
		“city”:"哈尔滨"
},{
		“name”:"广东"，
		“city”:“广州”
}]
}

11、API简单身份认证（APPCODE方式）
可以通过APPCODE的方式、实现到被调用接口的身份认证，获取访问相关API的调用权限。
使用方法：
（1）请求Header中添加的Authorization字段；
（2）配置Authorization字段的值为“APPCODE+半角空格+APPCODE值“。
格式：
Authorization：APPCODE AppCode值
示例：
Authorization：APPCODE 3F2504E04

12、API签名认证（AppKey&AppSecret）
AppKey&AppSecret相当于当前帐户的另外一套账号和密码机制、在云市场购买API之后，就可以在控制台找到对应的AppKey和AppSecret。
具体的签名认证方法请参见请求头部字段以及请求签名说明文档
